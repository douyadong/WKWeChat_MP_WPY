/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 项目名称：悟空找房+微信小程序
2. 文件名：src -> libraries -> apiDataFilter.js
3. 作者：zhaohuagang@lifang.com
4. 备注：请求api接口获取数据
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载相关资源
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
import apiConf from "../confs/api" ;
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
apiDataFilter的定义
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
class ApiDataFilter {
    constructor() {

    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    请求数据 , successCallback的唯一参数为：response，返回的json数据应该这样取得：response.body
    @apiPath : 接口路径
    @data : 同步发送的参数
    @method : get | post | jsonp
    @showLoading : 是否开启自定义的加载动画
    @showNavigationBarLoading : 是否开启小程序导航头loading
    @tips : 当请求结果异常时 是否开启message的提示
    @successCallback : 请求成功的回调处理
    @errorCallback : 请求异常的回调处理
    @completeCallback : 清酒完成就执行的回调
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    request({ apiPath , data = {} , method = "get" , dataType = "json" , contentType , showNavigationBarLoading = false , showLoading = true , tips = true , successCallback , errorCallback , completeCallback }) {
        let requestMethod = method.toLowerCase() ;
        let errorProcesser = ( errorCallback && typeof errorCallback ==="function" ) ? errorCallback : this.errorCallback ;         
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        首先根据showNavigationBarLoading参数决定是否需要开启小程序导航栏的加载提示
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/ 
        showNavigationBarLoading && wx.showNavigationBarLoading() ;
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        首先根据showLoading参数决定是否需要开启自定义的加载提示
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/ 
        if(showLoading) wx.showLoading({ "title" : "加载中" }) ;
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求参数拼装
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/ 
        let params = {
            url : this.pathToUrl(apiPath) ,
            method : requestMethod ,
            data ,
            dataType ,
            success : function (res) {                
                if ( res.statusCode.toString() === "200" && res.data.status.toString() == apiConf.successStatusCode ) {
                    typeof successCallback == "function" && successCallback(res.data) ;
                }
                else {
                    if(tips) {

                    }
                    errorProcesser(res.data.message) ;
                }
            } ,
            fail : function (error) {                             
                errorProcesser(error) ;                
            } ,
            complete : function () {
                showNavigationBarLoading && wx.hideNavigationBarLoading() ;
                if(showLoading) wx.hideLoading() ;
                typeof completeCallback == "function" && completeCallback() ;                
            }
        }

        if (requestMethod == "post") {
            if(contentType) {
                params.header = {
                    "Content-Type" : contentType
                }
            }            
        }
        wx.request(params) ;       
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    请求错误处理方法
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    errorCallback(error) {        
        console.log(error) ;
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    根据apiPath返回apiUrl
    @apiPath：从api配置中suffix往下层写如："example.rent.detail"
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    pathToUrl(apiPath) {
        let pathArray = apiPath.split(".") ;        
        let suffix = apiConf.suffix ;
        for(let n = 0 ; n < pathArray.length ; n ++) {
            suffix = suffix[pathArray[n]] ;
        }
        if(suffix === undefined) suffix = "" ;
        return apiConf.prefix[apiConf.dataStageEnv] + "/" + suffix ;
    }   
     /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    整个工具定义结束
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
}

export default new ApiDataFilter ;
