<!--
    @页面名称：搜索过程页面
    @作者：赵华刚 (zhaohuagang@lifang.com)
    @业务逻辑说明：
        1.
        2.        
-->
<template lang="wxml">
    <view class="city-search">
        <view class="city">{{city.cityName}}</view>
        <view class="search-box">
            <text class="iconfont icon-search"></text><input value="{{keyword}}" @input="keywordChange" class="estate-address" placeholder="搜索小区或地址" focus="true" confirm-type="search" bindconfirm="confirm"></input><text class="iconfont icon-close {{keyword == ''? 'invisible':''}}" @tap="clearKeyword"></text>
        </view>
    </view>
    <view class="result">       
       <block wx:if="{{items && items.length > 0}}">
       <view @tap="selectEstate" data-id="{{item.id}}" wx:key="{{*this}}" data-name="{{item.displayStr}}" class="item" wx:for="{{items}}" data-item="{{item}}">
        <view class="estate-name">
            <text wx:for="{{item.names}}" wx:for-item="t" wx:key="{{item.id}}" class="{{t.highlight?'highlight':''}}">{{t.text}}</text>
        </view>
        <view class="address">
            <text wx:for="{{item.address}}" wx:for-item="t" wx:key="{{item.id}}" class="{{t.highlight?'highlight':''}}">{{t.text}}</text>
        </view>
       </view>
       </block>

       <view class="item" wx:if="{{noData}}">
            <view class="estate-name">未找到该地址，请重新搜索</view>
            <view class="address">您可以更换其他关键字再试一次</view>
       </view>
    </view>
</template>

<script>
    import wepy from "wepy" ;    
    import apiDataFilter from "../../mixins/apiDataFilter";
    import Trace from "../../mixins/trace";

    export default class Search extends wepy.page {
        config = {
            navigationBarTitleText: "悟空找房",
        } ;
        components = {            
            
        } ; 
        data = {            
            keyword: "",
            lastKeyword: "",
            city: {                
            },
            items: [],
            noData: false,
            trace: new Trace
        } ;
        computed = {
            
        } ;
        methods = {
           keywordChange(e) {
               this.keyword = (e.detail.value || '').trim();
               if(this.keyword && this.keyword != this.lastKeyword){//发请求
                    let keyword = this.keyword;
                    this.lastKeyword = keyword;
                    apiDataFilter.request({
                        apiPath: "index.acWord",
                        showLoading: false,
                        data: {
                            cityId: this.city.cityId,
                            keyword: keyword,
                            associationType: 0
                        },
                        successCallback: (data)=>{                                                    
                            this.items = data.data && data.data.map((item)=>{
                                item.address = this.generateHighlight(item.address,item.markName);
                                item.names = this.generateHighlight(item.keyword,item.markName);
                                switch(item.type.toString()){//1 区域（行政区）2 板块 3地铁线路 4地铁站 5 小区名&地铁
                                    case "1":
                                        item.realIdObj = {
                                            districtId: item.showId
                                        }
                                    break;
                                    case "2":
                                        item.realIdObj = {
                                            townId: item.showId
                                        }
                                    break;
                                    case "3":
                                        item.realIdObj = {
                                            subwayLine: item.showId
                                        };
                                    break;
                                    case "4":
                                        item.realIdObj = {
                                            subwayStation: item.showId
                                        };
                                    break;
                                    case "5":
                                        item.realIdObj = {
                                            subEstateId: item.subEstateId
                                        }
                                    break;
                                }
                                return item;
                            }) || [];
                            if(this.items.length == 0){
                                this.noData = true;
                            } else {
                                this.noData = false;
                            }          
                            this.$apply();
                        }
                    });
               }
           },
           clearKeyword() {
               this.keyword = ''; 
               this.$apply(); 
               return false;             
           },
           selectEstate(e) {
               let item = e.currentTarget.dataset.item;

               wx.setStorageSync("estate", item);               
               this.trace.uv({eventName: "1211001", eventParam:{estate_id: item.subEstateId || item.showId, choice_content: item.keyword}});
               wx.navigateBack();
           },
           confirm(e) {
               //let = e.currentTarget.dataset.item;
               if(!this.items || this.items.length == 0){
                   return;
               }
               let item = this.items[0];
               wx.setStorageSync("estate", item);               
               this.trace.uv({eventName: "1211001", eventParam:{estate_id: item.subEstateId || item.showId, choice_content: item.keyword}});
               wx.navigateBack();
           }
        } ;
        events = {

        } ;
        onLoad() {
           this.city = wx.getStorageSync("city");
           
           //wx.setStorageSync('estate',null);
        };
        generateHighlight(str, subStr) {//拆分成用于高亮显示的数据结构
               let strs = str.split(subStr);
               let result = [];
               for(var i = 0; i < strs.length; i++){
                   if(i != 0){
                       result.push({text:subStr,highlight: true, id: i});
                   }
                   result.push({text:strs[i],highlight: false, id: i});
               }
               
               return result;
           };
        onShow() {
            this.trace.pv({ pageName: "1211" });
        }
    }
</script>

<style lang="less">
@import '../../less/mixins';
    .city-search {
        padding: 0 30rpx 30rpx 30rpx;
        background-color: #fff;
        .flex();
        .city {
            font-size: 28rpx;
            line-height: 56rpx;
            vertical-align: middle;
            color: #000;            
            .flex-shrink(0);
            //padding:10rpx 0;       
        }
        .search-box {
            .flex();
            .flex(1);
            margin-left: 28rpx;            
            background-color: #F0F0F0;
            border-radius: 6rpx;
            font-size: 26rpx;
            color: #7C7C7C;
            padding: 0rpx 0rpx 0rpx 30rpx;
            line-height: 56rpx;
            vertical-align: middle;
            .estate-address {                                
                margin-left: 10rpx;   
                font-size: 26rpx;     
                width: 80%;
                line-height: 56rpx;
                vertical-align: middle;                 
                height: 56rpx;
                color: #000;                                
            }
            position: relative;

            .icon-search {                
                font-size: 26rpx;
                line-height: 56rpx;
                vertical-align: middle;                
            }

            .icon-close {                
                font-size: 26rpx;
                position: absolute;
                right: 19rpx;
                line-height: 56rpx;
                &.invisible {
                    display: none;
                }
                z-index: 10;
                padding:0 15rpx;
                //border:1rpx solid red;
            }
        }
    }

    .result {
        background-color: #fff;
        margin-top: 6rpx;
        .item {
            margin-left: 30rpx;
            padding: 20rpx 0;
            .estate-name {
                font-size: 32rpx;
                line-height: 45rpx;
                color: #000;
            }
            .address {
                margin-top: 5rpx;
                font-size: 28rpx;
                line-height: 40rpx;
                color: #7C7C7C;
            }       

            .highlight {
                color:  #4081D6;
            }

            & + .item {
                border-top: 1rpx solid #E4E4E4;
            }
        }
    }

    
</style>