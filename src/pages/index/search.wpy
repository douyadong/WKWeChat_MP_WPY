<!--
    @页面名称：搜索过程页面
    @作者：赵华刚 (zhaohuagang@lifang.com)
    @业务逻辑说明：
        1.
        2.        
-->
<template lang="wxml">
    <view class="city-search">
        <view class="city">{{city.name}}</view>
        <view class="search-box">
            <text class="iconfont icon-search"></text><input value="{{keyword}}" @input="keywordChange" class="estate-address" placeholder="小区或地址" confirm-type="search"></input><text class="iconfont icon-close {{keyword == ''? 'invisible':''}}" @tap="clearKeyword"></text>
        </view>
    </view>
    <view class="result">       
       <block wx:if="{{items && items.length > 0}}">
       <view @tap="selectEstate" data-id="{{item.id}}" wx:key="{{*this}}" data-name="{{item.displayStr}}" class="item" wx:for="{{items}}" data-item="{{item}}">
        <view class="estate-name">
            <text wx:for="{{item.names}}" wx:for-item="t" wx:key="{{item.id}}" class="{{t.highlight?'highlight':''}}">{{t.text}}</text>
        </view>
        <view class="address">
            <text wx:for="{{item.address}}" wx:for-item="t" wx:key="{{item.id}}" class="{{t.highlight?'highlight':''}}">{{t.text}}</text>
        </view>
       </view>
       </block>

       <view class="item" wx:if="{{noData}}">
            <view class="estate-name">未找到该地址，请重新搜索</view>
            <view class="address">您可以更换其他关键字再试一次</view>
       </view>
    </view>
</template>

<script>
    import wepy from "wepy" ;    
    import apiDataFilter from "../../mixins/apiDataFilter";
    export default class Search extends wepy.page {
        config = {
            
        } ;
        components = {            
            
        } ; 
        data = {
            keyword: "",
            city: {                
            },
            items: [],
            noData: false
        } ;
        computed = {
            
        } ;
        methods = {
           keywordChange(e) {
               this.keyword = e.detail.value || '';
               if(this.keyword.trim()){//发请求
                    let keyword = this.keyword;
                    apiDataFilter.request({
                        apiPath: "index.acWord",
                        data: {
                            cityId: this.city.cityId,
                            associationalWord: keyword
                        },
                        successCallback: (data)=>{                                                    
                            this.items = data.data && data.data.map((item)=>{
                                item.address = this.generateHighlight(item.address,keyword);
                                item.names = this.generateHighlight(item.displayStr,keyword);
                                switch(item.associationOrder){//1:行政区 2:板块 5.小区
                                    case "1":
                                        item.realIdObj = {
                                            districtId: item.value
                                        }
                                    break;
                                    case "2":
                                        item.realIdObj = {
                                            townId: item.value
                                        }
                                    break;
                                    case "5":
                                        item.realIdObj = {
                                            estateId: item.value
                                        }
                                    break;
                                }
                                return item;
                            }) || [];
                            if(this.items.length == 0){
                                this.noData = true;
                            }                            
                            this.$apply();
                        }
                    });
               }
           },
           clearKeyword() {
               this.keyword = '';
           },
           selectEstate(e) {
               wx.setStorageSync("estate", e.currentTarget.dataset.item);
               wx.navigateBack();
           }
        } ;
        events = {

        } ;
        onLoad() {
           this.city = wx.getStorageSync("city");
        };
        generateHighlight(str, subStr) {//拆分成用于高亮显示的数据结构
               let strs = str.split(subStr);
               let result = [];
               for(var i = 0; i < strs.length; i++){
                   if(i != 0){
                       result.push({text:subStr,highlight: true, id: i});
                   }
                   result.push({text:strs[i],highlight: false, id: i});
               }
               
               return result;
           };
        onShow() {

        }
    }
</script>

<style lang="less">
@import '../../less/mixins';
    .city-search {
        padding: 0 30rpx 30rpx 30rpx;
        background-color: #fff;
        .flex();
        .city {
            font-size: 28rpx;
            color: #000;            
            .flex-shrink(0);
            padding:10rpx 0;
            &::after {
                content: '';
                vertical-align: middle !important;
                .triangle-down(8rpx,#7c7c7c);
            }            
        }
        .search-box {
            .flex();
            .flex(1);
            margin-left: 28rpx;            
            background-color: #F0F0F0;
            border-radius: 6rpx;
            font-size: 26rpx;
            color: #7C7C7C;
            padding: 2rpx 0rpx 4rpx 30rpx;
            .estate-address {
                line-height: 1;                
                margin-left: 10rpx;   
                font-size: 26rpx;             
                &::before {

                }
            }
            position: relative;

            .icon-search {
                margin-top: 10rpx;
                font-size: 26rpx;
            }

            .icon-close {
                margin-top: 10rpx;
                font-size: 26rpx;
                position: absolute;
                right: 19rpx;
                &.invisible {
                    display: none;
                }
            }
        }
    }

    .result {
        background-color: #fff;
        margin-top: 6rpx;
        .item {
            margin-left: 30rpx;
            padding: 20rpx 0;
            .estate-name {
                font-size: 32rpx;
                line-height: 45rpx;
                color: #000;
            }
            .address {
                margin-top: 5rpx;
                font-size: 28rpx;
                line-height: 40rpx;
                color: #7C7C7C;
            }       

            .highlight {
                color:  #4081D6;
            }

            & + .item {
                border-top: 1rpx solid #E4E4E4;
            }
        }
    }

    
</style>