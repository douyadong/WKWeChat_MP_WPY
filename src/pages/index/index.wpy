<!--
    @页面名称：整个小程序首页
    @作者：赵华刚 (zhaohuagang@lifang.com)
    @业务逻辑说明：
        1.
        2.        
-->
<template lang="wxml">
    <block wx:if="{{isOpenCity}}">
    <view class="city-search">
        <view class="city" @tap="switchCity">{{city.cityName}}</view>
        <view class="search-box">
            <text class="iconfont icon-search"></text><view class="estate-address" @tap="searchEstate">{{estate && estate.name || '搜索小区或地址'}}</view><text class="iconfont icon-close {{estate && estate.name ? '':'invisible'}}" @tap="clearEstate"></text>
        </view>
    </view>
    <view class="current-price">
        <view class="title">今日上海房价</view>
        <view class="price">105501元/㎡</view>
        <view class="detail">查看 <text class="iconfont icon-next"></text></view>
    </view>
    <view class="filter">
        <view class="district-total-type-sort">
            <view class="district-section" @tap="clickFilterSection">
                <view class="{{filter.selectedFilterSection == 'district'? 'open' : 'closed'}}" @tap="switchFilter" data-name="district">区域</view>                
            </view>            
            <view class="total-section" @tap="clickFilterSection">
                <view class="{{filter.selectedFilterSection == 'total'? 'open' : 'closed'}}" @tap="switchFilter" data-name="total">总价</view>                
            </view>
            <view class="type-section" @tap="clickFilterSection">
                <view class="{{filter.selectedFilterSection == 'type'? 'open' : 'closed'}}" @tap="switchFilter" data-name="type">户型</view>                
            </view>
            <view class="sort-section" @tap="clickFilterSection">
                <view class="{{filter.selectedFilterSection == 'sort'? 'open' : 'closed'}}" @tap="switchFilter" data-name="sort">排序</view>
                
            </view>            
        </view>    
        <view class="content {{filter.selectedFilterSection == '' ? 'invisible': ''}}">
                <view class="items {{filter.selectedFilterSection == 'district'? '' : 'invisible'}}">
                    <view class="wk-tabs">
                        <view class="tabs-handle">
                            <view class="{{filter.districtSection.selectedSection == 'district' ? 'on':''}}" data-name="district" @tap="selectDistrictMetro"><text>区域</text></view>
                            <view class="{{filter.districtSection.selectedSection == 'metro' ? 'on':''}}" @tap="selectDistrictMetro" data-name="metro"><text>地铁</text></view>                            
                        </view>
                        <view class="district-metro tabs-frame {{filter.districtSection.selectedSection=='district'?'visible':''}}">
                           <view class="left">
                            <view @tap="selectDistrict" class="item {{item.id == filter.districtSection.selectedDistrictId? 'active':''}}" wx:for="{{filter.districtSection.districts}}" data-id="{{item.id}}">{{item.name}}</view>
                           </view>
                           <view class="right" wx:for="{{filter.districtSection.districts}}" wx:if="{{filter.districtSection.selectedDistrictId == item.id}}">
                            <block wx:for="{{item.subList}}" wx:for-item="sl">
                                <view @tap="selectTown" class="item {{town.id==filter.districtSection.selectedTownId?'active':''}}" wx:for="{{sl.towns}}" wx:for-item="town" data-id="{{town.id}}">{{town.name}}</view>
                            </block>                            
                           </view>
                        </view>
                        <view class="district-metro tabs-frame {{filter.districtSection.selectedSection=='metro'?'visible':''}}">
                           <view class="left">
                            <view @tap="selectMetro" class="item {{item.id == filter.districtSection.selectedMetroId? 'active':''}}" wx:for="{{filter.districtSection.metros}}" data-id="{{item.id}}">{{item.name}}</view>
                           </view>
                           <view class="right" wx:for="{{filter.districtSection.metros}}" wx:if="{{filter.districtSection.selectedMetroId == item.id}}">
                            <view @tap="selectStation" class="item {{station.id==filter.districtSection.selectedStationId?'active':''}}" wx:for="{{item.subList}}" wx:for-item="station" data-id="{{station.id}}">{{station.name}}</view>
                           </view>
                        </view>
                    </view>
                </view>
                <view class="items totals {{filter.selectedFilterSection == 'total'? '' : 'invisible'}}">
                    <view @tap="selectTotal" class="{{filter.totalSection.selectedId == item.id? 'active' : ''}}" wx:for="{{filter.totalSection.items}}" data-id="{{item.id}}">{{item.text}}</view>
                    <view class="custom">
                        <view class="input"><input /></view>-<view class="input"><input/></view><view class="button">确定</view>
                    </view>
                </view>
                <view class="items types {{filter.selectedFilterSection == 'type'? '' : 'invisible'}}">
                    <view @tap="selectType" class="item {{filter.typeSection.selectedId == item.id? 'active' : ''}}" wx:for="{{filter.typeSection.items}}" data-id="{{item.id}}">{{item.text}}</view> 
                    <view class="confirm">
                        <button class="button">确定</button>
                    </view>
                </view>
                <view class="items sorts {{filter.selectedFilterSection == 'sort'? '' : 'invisible'}}">
                    <view @tap="selectSort" class="{{filter.sortSection.selectedId == item.id? 'active' : ''}}" wx:for="{{filter.sortSection.items}}" data-id="{{item.id}}">{{item.text}}</view>
                </view>
            </view>    
    </view>

    <view class="esf-items">
       <block wx:if="{{items && items.length>0}}">       
        <view class="house-count">已为您展示附近 453 套房源</view>     
        <view class="items"> 
            <repeat for="{{items}}" item="item">
                <esf :item="item"></esf>
            </repeat>
        </view>
       </block> 

       <view class="error" wx:if="{{isLoadError}}">
        <image src="http://img.wkzf.com/04f36182e2754599889eae69fc206270" @tap="refresh"></image>
        <view>加载失败，点击刷新</view>
       </view>

       <view class="no-data" wx:if="{{!items || items.length == 0}}">
        <view class="desc">
            暂时没有符合条件的房源
        </view>
        <view class="recommend">
            您可以扩大搜索范围，找到更多的房源
        </view>
        <button class="clear">
            清楚条件
        </button>
       </view>

       <view class="cover {{filter.selectedFilterSection!=''?'':'invisible'}}">
       </view>       
    </view>
    </block>
    <view class="no-open" wx:if="{{!isOpenCity}}">
        <view>
        <view>很抱歉</view>
        <view>{{cityName}}暂未开通二手房业务</view>
        <button class="switch-city">
            去看看其他城市的二手房
        </button>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy" ;    
    import Esf from "../../components/esf";
    import apiDataFilter from "../../mixins/apiDataFilter";
    export default class Index extends wepy.page {
        config = {            
            navigationBarTitleText: "悟空找房"            
        } ;
        components = {            
            esf: Esf
        } ; 
        data = {  
                city: {
                    cityId: 1,
                    cityName: "北京"
                },
                estate: {
                    id: "",
                    name: ""
                },
                filter : {
                    selectedFilterSection: "",
                    districtSection: {
                        districts: [],
                        metros:[],
                        selectedDistrictId: '',
                        selectedTownId: '',
                        selectedMotroId: "",
                        selectedStationId: "",
                        selectedSection: 'district' //默认区域选中
                    },
                    totalSection: {
                        items: [{
                            id: 0,
                            text: "不限"
                        },{
                            id: 1,
                            text: "100 万以下"
                        },{
                            id: 2,
                            text: "100 - 150 万"
                        },{
                            id: 3,
                            text: "150 - 200 万"
                        },{
                            id: 4,
                            text: "200 - 250 万"
                        },{
                            id: 5,
                            text: "250 - 300 万"
                        }],
                        selectedId: '',
                        customStartPrice: "",//自定义最低价
                        customEndPrice: "",//自定义最高价
                    },
                    typeSection: {
                        items: [{
                            id: 0,
                            text: "不限"
                        },{
                            id: 1,
                            text: "一室"
                        },{
                            id: 2,
                            text: "二室"
                        },{
                            id: 3,
                            text: "三室"
                        },{
                            id: 4,
                            text: "四室"
                        },{
                            id: 5,
                            text: "五室及以上"
                        }],
                        selectedId: ''
                    },
                    sortSection: {
                        items: [{
                            id: 0,
                            text: "默认排序"
                        },{
                            id: 1,
                            text: "单价从低到高"
                        },{
                            id: 2,
                            text: "单价从高到低"
                        },{
                            id: 3,
                            text: "总价从低到高"
                        },{
                            id: 4,
                            text: "总价从高到低"
                        }],
                        selectedId: ''
                    }
                },                   
                isLoadError: false,
                isOpenCity: true,                         
                items: [{
                    imageUrl: "https://img.wkzf.com/9e58bb1c5b0c4ccc84d3590af527a98b.ML",
                    estateName: "淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路",
                    type: "2室2厅1卫",
                    area: "66.36",
                    total: "525",
                    unit: "36251",
                    district: "浦东新区",
                    town: "花木西路",
                    tags: ["满五唯一", "地铁"],
                },{
                    imageUrl: "https://img.wkzf.com/9e58bb1c5b0c4ccc84d3590af527a98b.ML",
                    estateName: "淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路",
                    type: "2室2厅1卫",
                    area: "66.36",
                    total: "525",
                    unit: "36251",
                    district: "浦东新区",
                    town: "花木西路",
                    tags: ["满五唯一", "地铁"],
                }  ,{
                    imageUrl: "https://img.wkzf.com/9e58bb1c5b0c4ccc84d3590af527a98b.ML",
                    estateName: "淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路淞虹小区 杨高南路",
                    type: "2室2厅1卫",
                    area: "66.36",
                    total: "525",
                    unit: "36251",
                    district: "浦东新区",
                    town: "花木西路",
                    tags: ["满五唯一", "地铁"],
                }  ]          
        } ;
        computed = {
            
        } ;
        methods = {
           switchFilter(e) { //切换筛选条件事件处理函数
               let name = e.currentTarget.dataset.name;
               if(this.filter.selectedFilterSection == name){
                   name = '';
               }
               this.filter.selectedFilterSection = name;
               //this.setData('filter.selectedFilterSection',name)
           },
           selectSort(e) {//切换排序规则
                let sortId = e.currentTarget.dataset.id;
                this.filter.sortSection.selectedId = sortId;
           },

           selectType(e) {//切换房型
                let typeId = e.currentTarget.dataset.id;
                this.filter.typeSection.selectedId = typeId;
            },
            selectTotal(e) {//切换总价
                let typeId = e.currentTarget.dataset.id;
                this.filter.totalSection.selectedId = typeId;
            },
            selectDistrictMetro(e) {//切换区域或地铁
                let name = e.currentTarget.dataset.name;
                if(this.filter.districtSection.selectedSecion == name) return;
                this.filter.districtSection.selectedSection = name;
                this.filter.districtSection.selectedDistrictId = '';
                this.filter.districtSection.selectedTownId = '';
                this.filter.districtSection.selectedMetroId = '';
                this.filter.districtSection.selectedStationId = '';
            },
            selectDistrict(e) {//选择具体区
                let districtId = e.currentTarget.dataset.id;
                if(this.filter.districtSection.selectedDistrictId == districtId) return;
                this.filter.districtSection.selectedDistrictId = districtId;
                this.filter.districtSection.selectedTownId = '';
            },
            selectTown(e) {//选择具体板块
                let townId = e.currentTarget.dataset.id;
                this.filter.districtSection.selectedTownId = townId;
            },
            selectMetro(e) {//选择具体地铁线路
                let metroId = e.currentTarget.dataset.id;
                if(this.filter.districtSection.selectedMetroId == metroId) return;
                this.filter.districtSection.selectedMetroId = metroId;
                this.filter.districtSection.selectedStationId = '';
            },
            selectStation(e) {//选择具体地铁站点
                let stationId = e.currentTarget.dataset.id;
                this.filter.districtSection.selectedStationId = stationId;
            },
           refresh() {// 刷新列表

           },
           switchCity() {
               wx.navigateTo({url:'/pages/index/city'});
           },
           searchEstate() {
               wx.navigateTo({
                   url: "/pages/index/search"
               });
           },
           clearEstate() {
               wx.setStorageSync("estate",{id: "", name: ""});
               this.estate = {id: "", name: ""};
           },           
        } ;
        events = {

        } ;
        onLoad() {
           //定位
           wx.getLocation({
               success: (res)=>{
                   //根据经纬度获取城市信息
                    apiDataFilter.request({
                        apiPath: "index.findCityInfoByLonAndLat",
                        data: {
                            lon: res.longitude,
                            lat: res.latitude
                        },
                        successCallback: (data)=>{
                            wx.setStorageSync("city",data.data);
                            wx.setStorageSync("locationCity",data.data);
                            this.city = data.data;
                            this.$apply();

                            //todo:获取区域和地铁信息
                            this.getDistrictsAndMetro();                            
                        }
                    });
               },
               fail: ()=>{
                   //todo:弹出定位失败
               }
           });
        };
        onShow() {
            this.estate = wx.getStorageSync("estate") || {id: "", name: ""};
            this.city = wx.getStorageSync("city") || {cityId: 1, cityName: "北京"};

            //todo:获取区域和地铁信息
        };
        getDistrictsAndMetro() {
                apiDataFilter.request({
                    apiPath: "index.getCitySubwayLines",
                    data: {
                        cityId: this.city.cityId
                    },
                    successCallback: (data)=>{
                        this.filter.districtSection.metros = data.data;
                        this.$apply();
                    }
                });

                apiDataFilter.request({
                    apiPath: "index.getCityAreasInfo",
                    data: {
                        cityId: this.city.cityId
                    },
                    successCallback: (data)=>{
                        this.filter.districtSection.districts = data.data;
                        this.$apply();
                    }
                });
           };
    }
</script>

<style lang="less">
@import '../../less/mixins';
    .city-search {
        padding: 0 30rpx 30rpx 30rpx;
        background-color: #fff;
        .flex();
        .city {
            font-size: 28rpx;
            color: #000;            
            .flex-shrink(0);
            padding:10rpx 0;
            &::after {
                content: '';
                vertical-align: middle !important;
                .triangle-down(8rpx,#7c7c7c);
            }            
        }
        .search-box {
            .flex();
            .flex(1);
            margin-left: 28rpx;            
            background-color: #F0F0F0;
            border-radius: 6rpx;
            font-size: 26rpx;
            color: #7C7C7C;
            padding: 10rpx 0rpx 2rpx 30rpx;
            .estate-address {
                margin-left: 9rpx;
                &::before {

                }
            }

            position: relative;
            .icon-close {
                margin-top: 2rpx;
                font-size: 26rpx;
                position: absolute;
                right: 19rpx;
                &.invisible {
                    display: none;
                }
            }
        }
    }

    .current-price {
        color: #fff;
        padding: 63rpx 30rpx;
        background-image: linear-gradient(90deg, #64BCF0 6%, rgba(0,125,255,0.82) 91%);
        position: relative;
        .title {
            font-size: 50rpx;
            line-height: 1;
        }

        .price {
            font-size: 64rpx;
            line-height: 1;
            margin-top: 30rpx;
        }

        .detail {
            font-size: 32rpx;
            line-height: 28rpx;
            position: absolute;
            top: 171rpx;
            right: 24rpx;
        }        
    }

    .filter {
         position: relative;
        .district-total-type-sort {
            background-color: #fff;
            color: #000;
            font-size: 32rpx;
            padding: 30rpx 0;           
            .flex();            

            .district-section, .total-section, .type-section, .sort-section {
                text-align: center;
                .flex(1);
                position: relative;
                .closed::after {
                    content: '';
                    .triangle-down(9rpx, #7C7C7C);
                    vertical-align: middle !important;                    
                }

                .open {
                    color:  #4081D6;
                    &::after {
                        color:  #4081D6;
                        content: '';
                        .triangle-up(9rpx, #7C7C7C);                        
                        vertical-align: middle !important;
                    }
                }
            }                                              
        }

        .active {
            color:  #4081D6;
        }

        .invisible {
            display: none
        }
        .content {
                transition: all 2s;
                background-color: #f0f0f0;
                margin-top: 12rpx;
                position: absolute;
                width: 100%;
                top: 92rpx;                           
                font-size: 30rpx;                     
                z-index: 3;  

                .items {
                    background-color: #fff;
                }          

                .sorts {
                    view {
                        padding-top: 29rpx;
                        padding-bottom: 29rpx;
                        font-size: 30rpx;
                        line-height: 1;
                        vertical-align: middle;
                        text-align: center;
                        & + view {
                            border-top: 1rpx solid #E4E4E4;
                        }
                    }
                }    

                .types {
                    padding: 30rpx 30rpx 50rpx 30rpx;
                    background-color: #fff;
                    .item {
                        background-color: #F5F5F5;
                        font-size: 24rpx;
                        color: #000;
                        border-radius: 8rpx;
                        text-align: center;
                        padding: 20rpx;
                        border: 2rpx solid #F5F5F5;
                        width: 208rpx;
                        display: inline-block;
                        margin: 11rpx;
                        box-sizing: border-box;
                        text-align: center;

                        &.active {
                            color:  #4081D6;
                            border: 2rpx solid  #4081D6;
                            background-color: #fff;
                        }                                                
                    }

                    .confirm {
                        display: block;
                        margin-top: 40rpx;
                        border-top: 1px solid #D7D7D7;
                        padding-top: 50rpx;
                        text-align: center;
                        .button {
                            width: 310rpx;
                            border-radius: 8rpx;
                            color: #fff;
                            background-color: #4081D6;
                            font-size: 26rpx;
                            text-align: center;
                            padding:18rpx 0;
                            box-sizing: border-box;
                            line-height: 37rpx;
                        }
                    }
                }

                .totals {
                    padding-left: 40rpx;
                    padding-right: 40rpx;
                    view {
                        padding-top: 29rpx;
                        padding-bottom: 29rpx;
                        font-size: 30rpx;
                        line-height: 1;
                        vertical-align: middle;
                        text-align: center;
                    }

                    .custom {
                        border-top: 1rpx solid #D7D7D7;
                        padding: 40rpx 0;
                        color: #999;

                        view {
                            display: inline-block;
                            padding: 0;
                            &.input {                                
                                border-radius: 8rpx;
                                background-color: #F6F6F6;
                                text-align: center;                                
                                color: #4081D6;
                                width: 200rpx;
                                margin: 0 9rpx;
                                
                                font-size: 30rpx;
                                display: inline-block;
                                box-sizing: border-box;
                                input {
                                    height: 66rpx;
                                    line-height: 1;
                                }
                            }  

                            &.button {  
                                padding: 21rpx 0;
                                display: inline-block;  
                                width: 208rpx;
                                margin-left: 11rpx;
                                border-radius: 8rpx;                                
                                background-color: #4081D6;
                                text-align: center;                                
                                line-height: 1;    
                                color: #fff;                                
                                font-size: 30rpx;                                                                               
                            }                           
                        }                           
                    }
                }
            }
    }    

    .district-metro {
        &.visible {
            .flex();
        }  

        .flex();
        .left {
            .flex(1);
            background-color: #F0F0F0;
            font-size: 30rpx;     

            .item {
                line-height: 1;
                padding: 29rpx 0 29rpx 40rpx;
                color: #000;
                &.active {
                    background-color: #fff;
                    color: #4081D6;
                }  
            }                 
        }
        .right{
            .flex(1);
            font-size: 30rpx;
            background-color: #fff;
            

            .item {
                line-height: 1;
                color: #000;
                padding: 29rpx 0 29rpx 40rpx;
                &.active {                    
                    color: #4081D6;
                } 
            }
        }
    }

    .esf-items {
        position: relative;
        background-color: #fff;
        margin-top: 4rpx; 
        height: 100%;       
        .house-count {
            padding: 16rpx 0;
            font-size: 28rpx;
            line-height: 1;
            color: #4081D6;
            text-align: center;
            border: 1px solid #E4E4E4;
            border-left: none;
            border-right: none;
        }

        .items {
            padding:0 15rpx;
            background-color: #fff; 
        }
        .cover {
            background-color: rgba(0,0,0,.2);
            height: 100%;
            position:absolute;
            width: 100%;
            left: 0;
            top: 0;
            &.invisible {
                display: none;
            }
        }
    }

    page {
        height: 100%;
    }
    .error {
        text-align: center;
        padding-top: 180rpx;
        image {
            width: 313rpx;
            height: 288rpx;
        }
        view {
            font-size: 36rpx;
        }
    }

    .no-data {
        padding-top: 260rpx;
        text-align: center;        
            font-size: 32rpx;
        .desc {
            color: #000;
            line-height: 45rpx;
        }
        .recommend {
            color: #7C7C7C;
            line-height: 45rpx;
        }

        .clear {
            margin-top: 50rpx;
            width: 690rpx;
            color: #92A7C3;
            background-color: #F0F0F0;
            font-size: 28rpx;
            line-height: 1;
            padding-top: 31rpx;
            padding-bottom: 31rpx;
        }
    }

    .no-open {
        height: 100%;
        font-size: 32rpx;
        line-height: 45rpx;
        text-align: center;        
        background-color: #fff;
        .flex();
        .align-items(center);
        .justify-content(center);
        .switch-city {
            margin-top: 50rpx;
            width: 690rpx;
            color: #92A7C3;
            background-color: #F0F0F0;
            font-size: 28rpx;
            line-height: 1;
            padding-top: 31rpx;
            padding-bottom: 31rpx;
        }
    }
</style>